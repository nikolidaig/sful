*   Memory Management Model
*   Each row starts with 3 columns: [ O C ... ]
*   (O) stores at least 1 if any claims are in the row (is it occupied)
*   (C) stores the highest column claimed in that row (0-indexed)
*   It is a procedure's job to
*       * Determine how many columns it will occupy while running, the size (S),   
*       * Only modify the columns (C) through (C+S),
*       * Incremement (C) by (S) amount before running,
*       * Clear all data stored while running
*       * Decrement (C) by (S) after finishing
*   Defined procedures to aid in this are below:


* Set up current row by setting (O) to 1 and (C) to 2, 
* Claiming one cell of memory, and set that cell to 
* the parameter. SETS TO 1 BY DEFAULT.
@s{
    0c 1= > 2= 1C $=
}


* Move to first claimed column of the last claim in a row
* Takes parameter size of last claim
@m{
    1c !> $< <
}


* Claim parameter number of columns,
* Then move to the first claimed column
@C{
    1c $+   * Add to column count
    $m      * Move to first claimed column
}


* Release parameter number of columns
@R{ &{
    2$m             * Move to first claimed column
    2$=             * Set up counter
    [ - !{          * Begin looping over claim
        $> 0= $<    * Erase memory
    } ]
    1c 2$-          * Decrement (S)
    $c              * Move to original column
} }


* Empty row, will only work if (C) is correct 
@D{
    1c !c                   * Clear (O) and move to last claimed column
    1= [ &= (q) 0= < 1= ]   * Erase cells until (O) is reached
}